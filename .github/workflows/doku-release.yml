name: Release Doku

on:
  push:
    tags: [ '*.*.*' ]

env:
  REGISTRY: ghcr.io

permissions:
  contents: write

jobs:
  release:
    name: Client Docker Image
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.set-version-output.outputs.version }}
    permissions:
      contents: write
      packages: write
      id-token: write
    env:
      IMAGE_NAME: ${{ github.repository }}-client

    steps:
      - name: Get current date and time
        id: datetime
        run: echo "::set-output name=datetime::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
  
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 #v3.4.0
        with:
          cosign-release: 'v2.2.2'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0

      - name: Code Format Check (gofmt)
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go code is not formatted:"
            gofmt -d .
            exit 1
          fi

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: ./src/client/
          provenance: false
          file: ./src/client/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64/v8
          annotations: |
            ${{ steps.meta.outputs.annotations }},
            io.artifacthub.package.logo-url=https://github.com/dokulabs/.github/blob/main/profile/assets/logo-orange-bg.jpg?raw=true,
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/dokulabs/doku/main/README.md,
            io.artifacthub.package.license=Apache-2.0,
            org.opencontainers.image.vendor=Doku Labs,
            io.artifacthub.package.maintainers=[{'name':'Doku Labs','email':'developers@dokulabs.com'}],
            io.artifacthub.package.keywords='Monitoring, Observability, LLMs, OpenAI'
      
      - name: Sign the published Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}